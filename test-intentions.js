#!/usr/bin/env node

/**
 * Script para testar o sistema de inten√ß√µes
 * Executar: node test-intentions.js
 */

const path = require('path');

// Verificar se os arquivos necess√°rios existem
const fs = require('fs');

const requiredFiles = [
  './src/config/intentions.js',
  './src/services/intentionService.js',
  './src/handlers/messageHandler.js',
  './src/examples/addNewIntention.js',
  './src/tests/intentionService.test.js'
];

console.log('üîç VERIFICANDO INSTALA√á√ÉO DO SISTEMA DE INTEN√á√ïES');
console.log('=' .repeat(60));

let allFilesExist = true;

requiredFiles.forEach(file => {
  const exists = fs.existsSync(file);
  console.log(`${exists ? '‚úÖ' : '‚ùå'} ${file}`);
  if (!exists) allFilesExist = false;
});

if (!allFilesExist) {
  console.log('\n‚ùå Alguns arquivos est√£o faltando!');
  console.log('Certifique-se de que todos os arquivos foram criados corretamente.');
  process.exit(1);
}

console.log('\n‚úÖ Todos os arquivos necess√°rios est√£o presentes!');

// Testar imports
console.log('\nüß™ TESTANDO IMPORTS...');

try {
  const { INTENTIONS } = require('./src/config/intentions.js');
  console.log(`‚úÖ intentions.js - ${Object.keys(INTENTIONS).length} inten√ß√µes configuradas`);
  
  const { IntentionService } = require('./src/services/intentionService.js');
  console.log('‚úÖ intentionService.js - Servi√ßo importado com sucesso');
  
  const intentionService = new IntentionService();
  const stats = intentionService.getStats();
  console.log(`‚úÖ IntentionService instanciado - ${stats.totalIntentions} inten√ß√µes carregadas`);
  
} catch (error) {
  console.log('‚ùå Erro ao importar:', error.message);
  process.exit(1);
}

// Testar detec√ß√£o b√°sica
console.log('\nüéØ TESTANDO DETEC√á√ÉO B√ÅSICA...');

try {
  const { IntentionService } = require('./src/services/intentionService.js');
  const intentionService = new IntentionService();
  
  const testCases = [
    { msg: 'Preciso pagar meu IPTU', expected: 'DEBITOS' },
    { msg: 'Quero uma certid√£o negativa', expected: 'CERTIDOES' },
    { msg: 'Como emitir NFSe?', expected: 'NFSE' },
    { msg: 'Consultar meu im√≥vel', expected: 'BCI' },
    { msg: 'Agendar atendimento', expected: 'AGENDAMENTO' }
  ];
  
  testCases.forEach((test, index) => {
    const result = intentionService.detectIntentions(test.msg, `test_${index}`, 'MENU_PRINCIPAL');
    const detected = result.intentions[0]?.id;
    const confidence = result.confidence;
    
    const success = detected === test.expected && confidence > 30;
    console.log(`${success ? '‚úÖ' : '‚ùå'} "${test.msg}" ‚Üí ${detected} (${confidence}%)`);
  });
  
} catch (error) {
  console.log('‚ùå Erro nos testes:', error.message);
  process.exit(1);
}

// Executar testes completos
console.log('\nüß™ EXECUTANDO TESTES COMPLETOS...');

try {
  const { IntentionTester } = require('./src/tests/intentionService.test.js');
  const tester = new IntentionTester();
  
  // Reduzir verbosidade dos testes para este script
  const originalLog = console.log;
  let testResults = '';
  console.log = (...args) => {
    const message = args.join(' ');
    if (message.includes('‚úÖ PASSOU') || message.includes('‚ùå FALHOU') || message.includes('üìä RESULTADO')) {
      originalLog(...args);
    }
    if (message.includes('üìä RESULTADO')) {
      testResults = message;
    }
  };
  
  const allPassed = tester.runAllTests();
  console.log = originalLog;
  
  if (allPassed) {
    console.log('üéâ TODOS OS TESTES PASSARAM!');
  } else {
    console.log('‚ö†Ô∏è Alguns testes falharam - veja detalhes acima');
  }
  
} catch (error) {
  console.log('‚ùå Erro ao executar testes:', error.message);
}

// Executar exemplo
console.log('\nüìö TESTANDO EXEMPLO DE NOVA INTEN√á√ÉO...');

try {
  const { exemploTestarDeteccao } = require('./src/examples/addNewIntention.js');
  
  // Capturar output do exemplo
  const originalLog = console.log;
  console.log = () => {}; // Silenciar temporariamente
  
  exemploTestarDeteccao();
  
  console.log = originalLog;
  console.log('‚úÖ Exemplo de nova inten√ß√£o executado com sucesso');
  
} catch (error) {
  console.log('‚ùå Erro no exemplo:', error.message);
}

// Resumo final
console.log('\n' + '=' .repeat(60));
console.log('üìã RESUMO DA INSTALA√á√ÉO');
console.log('=' .repeat(60));

console.log('‚úÖ Sistema de Inten√ß√µes instalado e funcionando!');
console.log('\nüìÅ Arquivos principais:');
console.log('   ‚Ä¢ src/config/intentions.js - Configura√ß√£o de inten√ß√µes');
console.log('   ‚Ä¢ src/services/intentionService.js - L√≥gica principal');
console.log('   ‚Ä¢ src/handlers/messageHandler.js - Integra√ß√£o');

console.log('\nüõ†Ô∏è Para uso:');
console.log('   ‚Ä¢ Executar: npm start ou node index.js');
console.log('   ‚Ä¢ Testar: node src/tests/intentionService.test.js');
console.log('   ‚Ä¢ Exemplos: node src/examples/addNewIntention.js');

console.log('\nüìñ Documenta√ß√£o:');
console.log('   ‚Ä¢ README.refatorado.md - Vis√£o geral');
console.log('   ‚Ä¢ SISTEMA-INTENCOES.md - Documenta√ß√£o t√©cnica');

console.log('\nüéØ Pr√≥ximos passos:');
console.log('   1. Testar em produ√ß√£o com usu√°rios reais');
console.log('   2. Ajustar palavras-chave conforme necess√°rio');
console.log('   3. Adicionar novas inten√ß√µes usando os exemplos');
console.log('   4. Monitorar logs para otimiza√ß√µes');

console.log('\nüöÄ Sistema pronto para uso!');
